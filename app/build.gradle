apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: "com.vanniktech.android.junit.jacoco"
apply plugin: "org.sonarqube"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "org.covidwatch.tags.android"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            testCoverageEnabled true
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }

    testOptions {
        animationsDisabled = true
        unitTests.all {
            useJUnitPlatform()
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }

        }

    }

    junitJacoco {
        jacocoVersion = '0.8.2' // type String
        ignoreProjects = [] // type String array
        excludes // type String List
        includeNoLocationClasses = false // type boolean
        includeInstrumentationCoverageInMergedReport = false // type boolean
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.71"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

//    def nav_version = "2.3.0-alpha03" // required to use navigation-testing
    def nav_version = "2.2.1"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

//    // Navigation testing
//    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.0-alpha01'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha01'
    implementation 'android.arch.lifecycle:extensions:2.3.0-alpha01'
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.3.0-alpha01'

    implementation "androidx.paging:paging-runtime-ktx:2.1.2"
    implementation "androidx.room:room-runtime:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"
    annotationProcessor "androidx.room:room-compiler:2.2.5"
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation 'androidx.fragment:fragment-ktx:1.2.4'
    implementation "androidx.work:work-runtime-ktx:2.3.4"
    implementation "com.google.firebase:firebase-firestore-ktx:21.4.2"
    implementation 'com.google.guava:guava:29.0-android'
    implementation 'com.github.TCNCoalition:tcn-client-android:0.0.2'

    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation "org.koin:koin-android:2.1.5"
    implementation "org.koin:koin-androidx-viewmodel:2.1.5"

    // TEST RELATED DEPENDENCIES

    // Junit5 for Unit Tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Junit5 Parameterized tests
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"

    // Junit5 Run time
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"

    // AssertJ for Assertions
    testImplementation "org.assertj:assertj-core:3.11.1"

    // If Junit4 is still needed
//    testImplementation "junit:junit:4.13"
//    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.6.2"

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:1.0'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Fragment testing
    def fragment_version = "1.2.4"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

}

sonarqube {
    properties {
        property "sonar.projectKey", "covid19risk_covidwatch-android"
        property "sonar.organization", "covid19risk"
        property "sonar.host.url", "https://sonarcloud.io"
//        property "sonar.login", "6ce973fa20404fffdfb3817a5293e322e943aeac"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/debug/jacoco.xml,${buildDir}/reports/jacoco/release/jacoco.xml,${buildDir}/reports/jacocoCombined/debug/jacoco.xml"
    }
}
//task jacocoTestReport(type: JacocoReport) {
//    reports {
//        xml.enabled true
//        csv.enabled false
////        html.destination file("${buildDir}/jacocoHtml")
//    }
//}